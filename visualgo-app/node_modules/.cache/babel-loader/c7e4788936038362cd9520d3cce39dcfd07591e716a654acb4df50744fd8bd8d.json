{"ast":null,"code":"var _jsxFileName = \"/home/vedant/visualgo/visualgo-app/src/components/GraphGenDialog.js\";\n//Dialog Box to select params for Graph generation\nimport * as React from \"react\";\n\n// importing material UI components\nimport AppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Button from \"@mui/material/Button\";\nimport { Input } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SubHeader(props) {\n  // const style = {\n  //     background = '#2E3B55',\n  // };\n  const {\n    nodes = 200,\n    types = [{\n      label: \"SQUARE GRID\",\n      value: \"SQR\"\n    }, {\n      label: \"BINARY BALANCED\",\n      value: \"BIN\"\n    }],\n    onGenerate = () => {}\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Select number of nodes\", /*#__PURE__*/_jsxDEV(Button, {\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"200\",\n        sx: {\n          width: '30'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this)\n  // \t<AppBar position=\"static\" style={{ background: '#FFFFFF', color: '#0288D1'}}>\n  // \t\t<Toolbar variant=\"dense\">\n  //         <p>Select nodes</p>\n  // \t\t<Button color=\"inherit\" sx={{ flexGrow: 1 }} onClick={nodes=nodes-1}>-</Button>\n  // \t\t<Input color=\"inherit\" sx={{ flexGrow: 1 }} value={nodes} onClick={onGenerate}>{nodes}</Input>\n  // \t\t<Button color=\"inherit\" sx={{ flexGrow: 1 }} onClick={nodes=nodes+1}>+</Button>\n  // \t\t<div sx={{ flexGrow: 1 }}>\n  //             <label> Select the type of graph \n  //                 <select value={props.value} onChange={props.onChange}>\n  //                     {types.map((option) => (\n  //                         <option value={option.value}>{option.label}</option>\n  //                     ))}\n  //                 </select>\n  //             </label>\n  //         </div>\n  // \t\t<Button color=\"deepblue\" sx={{ flexGrow: 1 }} onClick={onGenerate}>Generate</Button>\n  // \t\t</Toolbar>\n  // \t</AppBar>\n  // );\n  ;\n}\n_c = SubHeader;\nvar _c;\n$RefreshReg$(_c, \"SubHeader\");","map":{"version":3,"names":["React","AppBar","Toolbar","Button","Input","SubHeader","props","nodes","types","label","value","onGenerate","width"],"sources":["/home/vedant/visualgo/visualgo-app/src/components/GraphGenDialog.js"],"sourcesContent":["//Dialog Box to select params for Graph generation\nimport * as React from \"react\";\n\n// importing material UI components\nimport AppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Button from \"@mui/material/Button\";\nimport { Input } from \"@mui/material\";\n\nexport default function SubHeader(props) {\n    // const style = {\n    //     background = '#2E3B55',\n    // };\n    const {nodes=200, types = [{label:\"SQUARE GRID\",value:\"SQR\"},{label:\"BINARY BALANCED\",value:\"BIN\"}], onGenerate=()=>{}} = props\n\n    \n    \nreturn (\n    <div >\n        <div>\n            Select number of nodes\n            <Button>-</Button>\n            <Input placeholder=\"200\" sx={{width:'30'}}></Input>\n        </div>\n    </div>\n// \t<AppBar position=\"static\" style={{ background: '#FFFFFF', color: '#0288D1'}}>\n// \t\t<Toolbar variant=\"dense\">\n//         <p>Select nodes</p>\n// \t\t<Button color=\"inherit\" sx={{ flexGrow: 1 }} onClick={nodes=nodes-1}>-</Button>\n// \t\t<Input color=\"inherit\" sx={{ flexGrow: 1 }} value={nodes} onClick={onGenerate}>{nodes}</Input>\n// \t\t<Button color=\"inherit\" sx={{ flexGrow: 1 }} onClick={nodes=nodes+1}>+</Button>\n// \t\t<div sx={{ flexGrow: 1 }}>\n//             <label> Select the type of graph \n//                 <select value={props.value} onChange={props.onChange}>\n//                     {types.map((option) => (\n//                         <option value={option.value}>{option.label}</option>\n//                     ))}\n//                 </select>\n//             </label>\n//         </div>\n// \t\t<Button color=\"deepblue\" sx={{ flexGrow: 1 }} onClick={onGenerate}>Generate</Button>\n// \t\t</Toolbar>\n// \t</AppBar>\n// );\n)\n}\n"],"mappings":";AAAA;AACA,OAAO,KAAKA,KAAK,MAAM,OAAO;;AAE9B;AACA,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,MAAM,MAAM,sBAAsB;AACzC,SAASC,KAAK,QAAQ,eAAe;AAAC;AAEtC,eAAe,SAASC,SAAS,CAACC,KAAK,EAAE;EACrC;EACA;EACA;EACA,MAAM;IAACC,KAAK,GAAC,GAAG;IAAEC,KAAK,GAAG,CAAC;MAACC,KAAK,EAAC,aAAa;MAACC,KAAK,EAAC;IAAK,CAAC,EAAC;MAACD,KAAK,EAAC,iBAAiB;MAACC,KAAK,EAAC;IAAK,CAAC,CAAC;IAAEC,UAAU,GAAC,MAAI,CAAC;EAAC,CAAC,GAAGL,KAAK;EAInI,oBACI;IAAA,uBACI;MAAA,kDAEI,QAAC,MAAM;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAW,eAClB,QAAC,KAAK;QAAC,WAAW,EAAC,KAAK;QAAC,EAAE,EAAE;UAACM,KAAK,EAAC;QAAI;MAAE;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA;EACjD;IAAA;IAAA;IAAA;EAAA;EAEd;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAAA;AAEA;AAAC,KApCuBP,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}