{"ast":null,"code":"var _jsxFileName = \"/home/vedant/visualgo/visualgo-app/src/components/GraphGenDialog.js\",\n  _s = $RefreshSig$();\n//Dialog Box to select params for Graph generation\nimport * as React from \"react\";\n\n// importing material UI components\nimport AppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Button from \"@mui/material/Button\";\nimport { Input } from \"@mui/material\";\nimport { textAlign } from \"@mui/system\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SubHeader(props) {\n  _s();\n  // const style = {\n  //     background = '#2E3B55',\n  // };\n  const {\n    onGenerate = (nodes, grid, scheme) => {},\n    setGraph = () => {}\n  } = props;\n  const types = [{\n    label: \"SQUARE GRID\",\n    value: \"SQR\"\n  }, {\n    label: \"BINARY BALANCED\",\n    value: \"BIN\"\n  }];\n  const schemes = [{\n    label: \"Remove 5% nodes\",\n    value: \"N5\"\n  }, {\n    label: \"Remove 5% edges\",\n    value: \"E5\"\n  }, {\n    label: \"Remove 10% nodes\",\n    value: \"N10\"\n  }, {\n    label: \"Remove 5% edges\",\n    value: \"E5\"\n  }, {\n    label: \"Remove 5% nodes\",\n    value: \"N5\"\n  }, {\n    label: \"Remove 5% edges\",\n    value: \"E5\"\n  }, {\n    label: \"None\",\n    value: \"None\"\n  }];\n  const [scheme, setScheme] = React.useState('E5');\n  const [grid, setGrid] = React.useState('SQR');\n  const [nodes, setNodes] = React.useState(200);\n  const handleNodesAdd = event => {\n    setNodes(nodes => {\n      return nodes + 1;\n    });\n  };\n  const handleNodesMinus = event => {\n    setNodes(nodes => {\n      return nodes - 1;\n    });\n  };\n  const handleGridChange = event => {\n    // alert('grid changed to '+ event.target.value)\n    setGrid(event.target.value);\n  };\n  const handleSchemeChange = event => {\n    // alert('grid changed to '+ event.target.value)\n    setScheme(event.target.value);\n  };\n  const handleGenerateGraph = () => {\n    onGenerate(nodes, grid, scheme);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      border: 1,\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          align: \"center\",\n          colSpan: 3,\n          children: \"Select nodes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          align: \"center\",\n          colSpan: 3,\n          children: \"Select grid type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          align: \"center\",\n          colSpan: 3,\n          children: \"Select randomization\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          rowSpan: 2,\n          align: \"center\",\n          colSpan: 3,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            sx: {\n              bgcolor: 'primary',\n              width: '100%'\n            },\n            onClick: handleGenerateGraph,\n            children: \"Generate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            sx: {\n              width: '100%'\n            },\n            onClick: handleNodesMinus,\n            children: \"-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          rowSpan: 1,\n          align: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"#NODES\",\n            value: nodes,\n            onInput: event => {\n              setNodes(parseInt(event.target.value));\n            },\n            onFocus: event => {\n              event.target.select();\n            },\n            align: \"center\",\n            textAlign: \"center\",\n            sx: {\n              width: 'fit-content',\n              align: 'center',\n              textAlign: 'center'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            sx: {\n              width: '100%'\n            },\n            onClick: handleNodesAdd,\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          colSpan: 3,\n          rowSpan: 1,\n          align: \"center\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            width: \"100%\",\n            sx: {\n              height: '100%',\n              width: '100%'\n            },\n            value: grid,\n            onChange: handleGridChange,\n            children: types.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option.value,\n              children: option.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 26\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          colSpan: 3,\n          rowSpan: 1,\n          align: \"center\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            width: \"100%\",\n            sx: {\n              height: '100%',\n              width: '100%'\n            },\n            value: scheme,\n            onChange: handleSchemeChange,\n            children: schemes.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option.value,\n              children: option.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 26\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this)\n  // \t<AppBar position=\"static\" style={{ background: '#FFFFFF', color: '#0288D1'}}>\n  // \t\t<Toolbar variant=\"dense\">\n  //         <p>Select nodes</p>\n  // \t\t<Button color=\"inherit\" sx={{ flexGrow: 1 }} onClick={nodes=nodes-1}>-</Button>\n  // \t\t<Input color=\"inherit\" sx={{ flexGrow: 1 }} value={nodes} onClick={onGenerate}>{nodes}</Input>\n  // \t\t<Button color=\"inherit\" sx={{ flexGrow: 1 }} onClick={nodes=nodes+1}>+</Button>\n  // \t\t<div sx={{ flexGrow: 1 }}>\n  //             <label> Select the type of graph \n  //                 <select value={props.value} onChange={props.onChange}>\n  //                     {types.map((option) => (\n  //                         <option value={option.value}>{option.label}</option>\n  //                     ))}\n  //                 </select>\n  //             </label>\n  //         </div>\n  // \t\t<Button color=\"deepblue\" sx={{ flexGrow: 1 }} onClick={onGenerate}>Generate</Button>\n  // \t\t</Toolbar>\n  // \t</AppBar>\n  // );\n  ;\n}\n_s(SubHeader, \"tDsqBALVJ57Fn7gwjOE6f4/Z/PQ=\");\n_c = SubHeader;\nvar _c;\n$RefreshReg$(_c, \"SubHeader\");","map":{"version":3,"names":["React","AppBar","Toolbar","Button","Input","textAlign","SubHeader","props","onGenerate","nodes","grid","scheme","setGraph","types","label","value","schemes","setScheme","useState","setGrid","setNodes","handleNodesAdd","event","handleNodesMinus","handleGridChange","target","handleSchemeChange","handleGenerateGraph","bgcolor","width","parseInt","select","align","height","map","option"],"sources":["/home/vedant/visualgo/visualgo-app/src/components/GraphGenDialog.js"],"sourcesContent":["//Dialog Box to select params for Graph generation\nimport * as React from \"react\";\n\n// importing material UI components\nimport AppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Button from \"@mui/material/Button\";\nimport { Input } from \"@mui/material\";\nimport { textAlign } from \"@mui/system\";\n\nexport default function SubHeader(props) {\n    // const style = {\n    //     background = '#2E3B55',\n    // };\n    const {onGenerate=(nodes, grid, scheme)=>{}, setGraph=()=>{}} = props\n    const types = [{label:\"SQUARE GRID\",value:\"SQR\"},{label:\"BINARY BALANCED\",value:\"BIN\"}]\n    const schemes = [{label:\"Remove 5% nodes\", value:\"N5\"}, {label:\"Remove 5% edges\", value:\"E5\"},\n    {label:\"Remove 10% nodes\", value:\"N10\"}, {label:\"Remove 5% edges\", value:\"E5\"},\n    {label:\"Remove 5% nodes\", value:\"N5\"}, {label:\"Remove 5% edges\", value:\"E5\"}, {label:\"None\", value:\"None\"}]\n    const [scheme, setScheme] = React.useState('E5')\n    const [grid, setGrid] = React.useState('SQR')\n    const [nodes, setNodes] = React.useState(200)\n\n    const handleNodesAdd = (event) => {\n        setNodes((nodes)=>{return nodes+1;})\n    }\n\n    const handleNodesMinus = (event) => {\n        setNodes((nodes)=>{return nodes-1;})\n    }\n\n    const handleGridChange = (event) => {\n        // alert('grid changed to '+ event.target.value)\n        setGrid(event.target.value);\n    }\n\n    const handleSchemeChange = (event) => {\n        // alert('grid changed to '+ event.target.value)\n        setScheme(event.target.value);\n    }\n\n    const handleGenerateGraph = () => {\n        onGenerate(nodes, grid, scheme);\n    }\n    \n    \nreturn (\n    <div>\n        <table border={1}>\n            <tr>\n                <td align=\"center\" colSpan={3}>\n                    Select nodes\n                </td>\n                <td align=\"center\" colSpan={3}>\n                    Select grid type\n                </td>\n                <td align=\"center\" colSpan={3}>\n                    Select randomization\n                </td>\n                <td rowSpan={2} align='center' colSpan={3}>\n                    <Button sx={{bgcolor:'primary', width:'100%'}} onClick={handleGenerateGraph}>Generate</Button>\n                </td>\n            </tr>\n            <tr>\n                <td>\n                    <Button sx={{width:'100%'}} onClick={handleNodesMinus}>-</Button>\n                </td>\n                <td rowSpan={1} align='center'>\n                    <Input placeholder='#NODES' value={nodes} onInput={(event)=>{setNodes(parseInt(event.target.value));}} onFocus={(event)=>{event.target.select()}} align='center' textAlign='center' sx={{width:'fit-content', align:'center', textAlign:'center', }} ></Input>\n                </td>\n                <td>\n                    <Button sx={{width:'100%'}} onClick={handleNodesAdd}>+</Button>\n                </td>\n                <td colSpan={3} rowSpan={1} align='center'>\n                <select width='100%' sx={{height:'100%', width:'100%'}} value={grid} onChange={handleGridChange}>\n                    {types.map((option) => (\n                         <option value={option.value}>{option.label}</option>\n                     ))}\n                 </select>\n                </td>\n                <td colSpan={3} rowSpan={1} align='center'>\n                <select width='100%' sx={{height:'100%', width:'100%'}} value={scheme} onChange={handleSchemeChange}>\n                    {schemes.map((option) => (\n                         <option value={option.value}>{option.label}</option>\n                     ))}\n                 </select>\n                </td>\n            </tr>\n        </table>\n\n        {/* <p padding='10px'>Select nodes</p> */}\n        \n    </div>\n// \t<AppBar position=\"static\" style={{ background: '#FFFFFF', color: '#0288D1'}}>\n// \t\t<Toolbar variant=\"dense\">\n//         <p>Select nodes</p>\n// \t\t<Button color=\"inherit\" sx={{ flexGrow: 1 }} onClick={nodes=nodes-1}>-</Button>\n// \t\t<Input color=\"inherit\" sx={{ flexGrow: 1 }} value={nodes} onClick={onGenerate}>{nodes}</Input>\n// \t\t<Button color=\"inherit\" sx={{ flexGrow: 1 }} onClick={nodes=nodes+1}>+</Button>\n// \t\t<div sx={{ flexGrow: 1 }}>\n//             <label> Select the type of graph \n//                 <select value={props.value} onChange={props.onChange}>\n//                     {types.map((option) => (\n//                         <option value={option.value}>{option.label}</option>\n//                     ))}\n//                 </select>\n//             </label>\n//         </div>\n// \t\t<Button color=\"deepblue\" sx={{ flexGrow: 1 }} onClick={onGenerate}>Generate</Button>\n// \t\t</Toolbar>\n// \t</AppBar>\n// );\n)\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}