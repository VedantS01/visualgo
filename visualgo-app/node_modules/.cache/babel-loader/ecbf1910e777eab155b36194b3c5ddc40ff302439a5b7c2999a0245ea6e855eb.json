{"ast":null,"code":"var _jsxFileName = \"/home/vedant/visualgo/visualgo-app/src/components/GraphGenDialog.js\",\n  _s = $RefreshSig$();\n//Dialog Box to select params for Graph generation\nimport * as React from \"react\";\n\n// importing material UI components\nimport AppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Button from \"@mui/material/Button\";\nimport { Input } from \"@mui/material\";\nimport { textAlign } from \"@mui/system\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SubHeader(props) {\n  _s();\n  // const style = {\n  //     background = '#2E3B55',\n  // };\n  const {\n    types = [{\n      label: \"SQUARE GRID\",\n      value: \"SQR\"\n    }, {\n      label: \"BINARY BALANCED\",\n      value: \"BIN\"\n    }],\n    onGenerate = () => {},\n    onChange = () => {}\n  } = props;\n  const [grid, setGrid] = React.useState('SQR');\n  const [nodes, setNodes] = React.useState(200);\n  const handleNodesAdd = event => {\n    set;\n  };\n  const handleGridChange = event => {\n    // alert('grid changed to '+ event.target.value)\n    setGrid(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      border: 1,\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          align: \"center\",\n          colSpan: 3,\n          children: \"Select nodes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          align: \"center\",\n          colSpan: 3,\n          children: \"Select grid type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          align: \"center\",\n          colSpan: 3,\n          children: \"Select randomization factor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          rowSpan: 2,\n          align: \"center\",\n          colSpan: 3,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            sx: {\n              bgcolor: 'primary',\n              width: '100%'\n            },\n            onClick: onGenerate,\n            children: \"Generate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            sx: {\n              width: '100%'\n            },\n            children: \"-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          rowSpan: 1,\n          align: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"#NODES\",\n            value: nodes,\n            align: \"center\",\n            textAlign: \"center\",\n            sx: {\n              width: '40px',\n              align: 'center',\n              textAlign: 'center'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            sx: {\n              width: '100%'\n            },\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          colSpan: 2,\n          rowSpan: 2,\n          align: \"center\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            sx: {\n              height: '100%'\n            },\n            value: grid,\n            onChange: handleGridChange,\n            children: types.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option.value,\n              children: option.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 26\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this)\n  // \t<AppBar position=\"static\" style={{ background: '#FFFFFF', color: '#0288D1'}}>\n  // \t\t<Toolbar variant=\"dense\">\n  //         <p>Select nodes</p>\n  // \t\t<Button color=\"inherit\" sx={{ flexGrow: 1 }} onClick={nodes=nodes-1}>-</Button>\n  // \t\t<Input color=\"inherit\" sx={{ flexGrow: 1 }} value={nodes} onClick={onGenerate}>{nodes}</Input>\n  // \t\t<Button color=\"inherit\" sx={{ flexGrow: 1 }} onClick={nodes=nodes+1}>+</Button>\n  // \t\t<div sx={{ flexGrow: 1 }}>\n  //             <label> Select the type of graph \n  //                 <select value={props.value} onChange={props.onChange}>\n  //                     {types.map((option) => (\n  //                         <option value={option.value}>{option.label}</option>\n  //                     ))}\n  //                 </select>\n  //             </label>\n  //         </div>\n  // \t\t<Button color=\"deepblue\" sx={{ flexGrow: 1 }} onClick={onGenerate}>Generate</Button>\n  // \t\t</Toolbar>\n  // \t</AppBar>\n  // );\n  ;\n}\n_s(SubHeader, \"hGO6fh/bk84Dg2m3XU+slfkmpMM=\");\n_c = SubHeader;\nvar _c;\n$RefreshReg$(_c, \"SubHeader\");","map":{"version":3,"names":["React","AppBar","Toolbar","Button","Input","textAlign","SubHeader","props","types","label","value","onGenerate","onChange","grid","setGrid","useState","nodes","setNodes","handleNodesAdd","event","set","handleGridChange","target","bgcolor","width","align","height","map","option"],"sources":["/home/vedant/visualgo/visualgo-app/src/components/GraphGenDialog.js"],"sourcesContent":["//Dialog Box to select params for Graph generation\nimport * as React from \"react\";\n\n// importing material UI components\nimport AppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Button from \"@mui/material/Button\";\nimport { Input } from \"@mui/material\";\nimport { textAlign } from \"@mui/system\";\n\nexport default function SubHeader(props) {\n    // const style = {\n    //     background = '#2E3B55',\n    // };\n    const {types = [{label:\"SQUARE GRID\",value:\"SQR\"},{label:\"BINARY BALANCED\",value:\"BIN\"}], onGenerate=()=>{}, onChange=()=>{}} = props\n    const [grid, setGrid] = React.useState('SQR')\n    const [nodes, setNodes] = React.useState(200)\n\n    const handleNodesAdd = (event) => {\n        set\n    }\n\n    const handleGridChange = (event) => {\n        // alert('grid changed to '+ event.target.value)\n        setGrid(event.target.value);\n    }\n    \n    \nreturn (\n    <div>\n        <table border={1}>\n            <tr>\n                <td align=\"center\" colSpan={3}>\n                    Select nodes\n                </td>\n                <td align=\"center\" colSpan={3}>\n                    Select grid type\n                </td>\n                <td align=\"center\" colSpan={3}>\n                    Select randomization factor\n                </td>\n                <td rowSpan={2} align='center' colSpan={3}>\n                    <Button sx={{bgcolor:'primary', width:'100%'}} onClick={onGenerate}>Generate</Button>\n                </td>\n            </tr>\n            <tr>\n                <td>\n                    <Button sx={{width:'100%'}}>-</Button>\n                </td>\n                <td rowSpan={1} align='center'>\n                    <Input placeholder='#NODES' value={nodes} align='center' textAlign='center' sx={{width:'40px', align:'center', textAlign:'center', }} ></Input>\n                </td>\n                <td>\n                    <Button sx={{width:'100%'}}>+</Button>\n                </td>\n                <td colSpan={2} rowSpan={2} align='center'>\n                <select sx={{height:'100%'}} value={grid} onChange={handleGridChange}>\n                    {types.map((option) => (\n                         <option value={option.value}>{option.label}</option>\n                     ))}\n                 </select>\n                </td>\n            </tr>\n        </table>\n\n        {/* <p padding='10px'>Select nodes</p> */}\n        \n    </div>\n// \t<AppBar position=\"static\" style={{ background: '#FFFFFF', color: '#0288D1'}}>\n// \t\t<Toolbar variant=\"dense\">\n//         <p>Select nodes</p>\n// \t\t<Button color=\"inherit\" sx={{ flexGrow: 1 }} onClick={nodes=nodes-1}>-</Button>\n// \t\t<Input color=\"inherit\" sx={{ flexGrow: 1 }} value={nodes} onClick={onGenerate}>{nodes}</Input>\n// \t\t<Button color=\"inherit\" sx={{ flexGrow: 1 }} onClick={nodes=nodes+1}>+</Button>\n// \t\t<div sx={{ flexGrow: 1 }}>\n//             <label> Select the type of graph \n//                 <select value={props.value} onChange={props.onChange}>\n//                     {types.map((option) => (\n//                         <option value={option.value}>{option.label}</option>\n//                     ))}\n//                 </select>\n//             </label>\n//         </div>\n// \t\t<Button color=\"deepblue\" sx={{ flexGrow: 1 }} onClick={onGenerate}>Generate</Button>\n// \t\t</Toolbar>\n// \t</AppBar>\n// );\n)\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}