{"ast":null,"code":"var _jsxFileName = \"/home/vedant/visualgo/visualgo-app/src/components/GraphBox.js\";\n//TODO: Write Component to hold (Undirected) Graph\n\nimport { AspectRatio } from \"@mui/icons-material\";\nimport { Box, Typography } from \"@mui/material\";\nimport { Container } from \"@mui/system\";\nimport Graph from \"react-graph-vis\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GraphBox = props => {\n  const {\n    graph,\n    getNetwork\n  } = props;\n  const options = {\n    height: \"100%\",\n    width: \"100%\",\n    nodes: {\n      shape: \"dot\",\n      size: 16\n    },\n    layout: {\n      hierarchical: false\n    },\n    physics: {\n      forceAtlas2Based: {\n        gravitationalConstant: -26,\n        centralGravity: 0.005,\n        springLength: 230,\n        springConstant: 0.18\n      },\n      maxVelocity: 146,\n      //   solver: \"forceAtlas2Based\",\n      //   solver: \"repulsion\",\n      timestep: 0.35,\n      stabilization: {\n        enabled: true,\n        iterations: 2000,\n        updateInterval: 25\n      }\n    },\n    edges: {\n      color: \"#abb4be\",\n      size: 12\n    },\n    interaction: {\n      multiselect: true\n    }\n  };\n  const events = {\n    select: _ref => {\n      let {\n        nodes,\n        edges\n      } = _ref;\n      console.log(\"Selected nodes:\");\n      console.log(nodes);\n      console.log(\"Selected edges:\");\n      console.log(edges);\n      // alert(\"Selected node: \" + nodes);\n      if (nodes.size === 0 && edges.size === 0) setDeleteButton(false);else setDeleteButton(true);\n    }\n    // deselectNode: ({nodes, edges, ...rest}) => {\n    //   if(nodes.size === 0 && edges.size === 0)\n    //   setDeleteButton(false);\n    // },\n    // deselectEdge: ({nodes, edges, ...rest}) => {\n    //   if(nodes.size === 0 && edges.size === 0)\n    //   setDeleteButton(false);\n    // },\n    // click: ({nodes, edges, ...rest}) => {\n    //   if(nodes.size === 0 && edges.size === 0)\n    //   setDeleteButton(false);\n    // },\n    // stabilized: () => {\n    //   if (graph) { // Network will be set using getNetwork event from the Graph component\n    //       graph.setOptions({ physics: false }); // Disable physics after stabilization\n    //       graph.fit();\n    //   }\n    // }\n\n    // doubleClick: ({ nodes, edges }) => {\n    //   console.log(\"Deleted nodes:\");\n    //   console.log(nodes);\n    //   console.log(\"Deleted edges:\");\n    //   console.log(edges);\n\n    //   // alert(\"Selected node: \" + nodes);\n    // },\n    // doubleClick: ({ pointer: { canvas } }) => {\n    //   createNode(canvas.x, canvas.y);\n    // }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Graph, {\n    graph: graph,\n    options: options,\n    events: events,\n    style: {\n      flex: 1,\n      height: '700px'\n    },\n    getNetwork: getNetwork\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n};\n_c = GraphBox;\nexport default GraphBox;\nvar _c;\n$RefreshReg$(_c, \"GraphBox\");","map":{"version":3,"names":["AspectRatio","Box","Typography","Container","Graph","GraphBox","props","graph","getNetwork","options","height","width","nodes","shape","size","layout","hierarchical","physics","forceAtlas2Based","gravitationalConstant","centralGravity","springLength","springConstant","maxVelocity","timestep","stabilization","enabled","iterations","updateInterval","edges","color","interaction","multiselect","events","select","console","log","setDeleteButton","flex"],"sources":["/home/vedant/visualgo/visualgo-app/src/components/GraphBox.js"],"sourcesContent":["//TODO: Write Component to hold (Undirected) Graph\n\nimport { AspectRatio } from \"@mui/icons-material\"\nimport { Box, Typography } from \"@mui/material\"\nimport { Container } from \"@mui/system\"\nimport Graph from \"react-graph-vis\"\n\nconst GraphBox = (props) => {\n    const {graph, getNetwork} = props\n    const options = {\n        height: \"100%\",\n          width: \"100%\",\n          nodes: {\n              shape: \"dot\",\n              size: 16\n          },\n          layout: {\n              hierarchical: false\n          },\n          physics: {\n              forceAtlas2Based: {\n                  gravitationalConstant: -26,\n                  centralGravity: 0.005,\n                  springLength: 230,\n                  springConstant: 0.18,\n              },\n              maxVelocity: 146,\n            //   solver: \"forceAtlas2Based\",\n            //   solver: \"repulsion\",\n              timestep: 0.35,\n              stabilization: {\n                  enabled: true,\n                  iterations: 2000,\n                  updateInterval: 25,\n              },\n          },\n          edges: {\n              color: \"#abb4be\",\n              size: 12,\n          },\n          interaction: {\n            multiselect: true\n          }\n      };\n\n    const events = {\n        select: ({ nodes, edges }) => {\n          console.log(\"Selected nodes:\");\n          console.log(nodes);\n          console.log(\"Selected edges:\");\n          console.log(edges);\n          // alert(\"Selected node: \" + nodes);\n          if(nodes.size === 0 && edges.size === 0)\n          setDeleteButton(false);\n          else\n          setDeleteButton(true);\n        },\n        // deselectNode: ({nodes, edges, ...rest}) => {\n        //   if(nodes.size === 0 && edges.size === 0)\n        //   setDeleteButton(false);\n        // },\n        // deselectEdge: ({nodes, edges, ...rest}) => {\n        //   if(nodes.size === 0 && edges.size === 0)\n        //   setDeleteButton(false);\n        // },\n        // click: ({nodes, edges, ...rest}) => {\n        //   if(nodes.size === 0 && edges.size === 0)\n        //   setDeleteButton(false);\n        // },\n        // stabilized: () => {\n        //   if (graph) { // Network will be set using getNetwork event from the Graph component\n        //       graph.setOptions({ physics: false }); // Disable physics after stabilization\n        //       graph.fit();\n        //   }\n        // }\n  \n        \n        \n        // doubleClick: ({ nodes, edges }) => {\n        //   console.log(\"Deleted nodes:\");\n        //   console.log(nodes);\n        //   console.log(\"Deleted edges:\");\n        //   console.log(edges);\n          \n        //   // alert(\"Selected node: \" + nodes);\n        // },\n        // doubleClick: ({ pointer: { canvas } }) => {\n        //   createNode(canvas.x, canvas.y);\n        // }\n      }\n    return (\n        <Graph graph={graph} options={options} events={events} style={{flex: 1, height: '700px'}} getNetwork={getNetwork} />\n    )\n}\n\nexport default GraphBox"],"mappings":";AAAA;;AAEA,SAASA,WAAW,QAAQ,qBAAqB;AACjD,SAASC,GAAG,EAAEC,UAAU,QAAQ,eAAe;AAC/C,SAASC,SAAS,QAAQ,aAAa;AACvC,OAAOC,KAAK,MAAM,iBAAiB;AAAA;AAEnC,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EACxB,MAAM;IAACC,KAAK;IAAEC;EAAU,CAAC,GAAGF,KAAK;EACjC,MAAMG,OAAO,GAAG;IACZC,MAAM,EAAE,MAAM;IACZC,KAAK,EAAE,MAAM;IACbC,KAAK,EAAE;MACHC,KAAK,EAAE,KAAK;MACZC,IAAI,EAAE;IACV,CAAC;IACDC,MAAM,EAAE;MACJC,YAAY,EAAE;IAClB,CAAC;IACDC,OAAO,EAAE;MACLC,gBAAgB,EAAE;QACdC,qBAAqB,EAAE,CAAC,EAAE;QAC1BC,cAAc,EAAE,KAAK;QACrBC,YAAY,EAAE,GAAG;QACjBC,cAAc,EAAE;MACpB,CAAC;MACDC,WAAW,EAAE,GAAG;MAClB;MACA;MACEC,QAAQ,EAAE,IAAI;MACdC,aAAa,EAAE;QACXC,OAAO,EAAE,IAAI;QACbC,UAAU,EAAE,IAAI;QAChBC,cAAc,EAAE;MACpB;IACJ,CAAC;IACDC,KAAK,EAAE;MACHC,KAAK,EAAE,SAAS;MAChBhB,IAAI,EAAE;IACV,CAAC;IACDiB,WAAW,EAAE;MACXC,WAAW,EAAE;IACf;EACJ,CAAC;EAEH,MAAMC,MAAM,GAAG;IACXC,MAAM,EAAE,QAAsB;MAAA,IAArB;QAAEtB,KAAK;QAAEiB;MAAM,CAAC;MACvBM,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;MAC9BD,OAAO,CAACC,GAAG,CAACxB,KAAK,CAAC;MAClBuB,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;MAC9BD,OAAO,CAACC,GAAG,CAACP,KAAK,CAAC;MAClB;MACA,IAAGjB,KAAK,CAACE,IAAI,KAAK,CAAC,IAAIe,KAAK,CAACf,IAAI,KAAK,CAAC,EACvCuB,eAAe,CAAC,KAAK,CAAC,CAAC,KAEvBA,eAAe,CAAC,IAAI,CAAC;IACvB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAIA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;EACF,CAAC;;EACH,oBACI,QAAC,KAAK;IAAC,KAAK,EAAE9B,KAAM;IAAC,OAAO,EAAEE,OAAQ;IAAC,MAAM,EAAEwB,MAAO;IAAC,KAAK,EAAE;MAACK,IAAI,EAAE,CAAC;MAAE5B,MAAM,EAAE;IAAO,CAAE;IAAC,UAAU,EAAEF;EAAW;IAAA;IAAA;IAAA;EAAA,QAAG;AAE5H,CAAC;AAAA,KAtFKH,QAAQ;AAwFd,eAAeA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}