{"ast":null,"code":"import grid from 'ngraph.generators';\nfunction grid_graph() {\n  let num_nodes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1000;\n  let type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'triangular';\n  alert('here we go!');\n  let graph = require('ngraph.generators').grid(100, 10);\n  alert('nodes: ' + graph.getNodeCount());\n  let nodes = [];\n  graph.forEachNode(function (node) {\n    nodes.push({\n      id: node.id,\n      label: node.id\n    });\n  });\n  return graph;\n}\nexport default grid_graph;","map":{"version":3,"names":["grid","grid_graph","num_nodes","type","alert","graph","require","getNodeCount","nodes","forEachNode","node","push","id","label"],"sources":["/home/vedant/visualgo/visualgo-app/src/algorithms/graph_gen/grid.js"],"sourcesContent":["import grid from 'ngraph.generators'\n\nfunction grid_graph(num_nodes=1000, type='triangular') {\n    alert('here we go!')\n    let graph = require('ngraph.generators').grid(100,10)\n    alert('nodes: '+graph.getNodeCount())\n    let nodes = []\n    graph.forEachNode(function(node) {nodes.push({id:node.id, label:node.id})})\n    return graph\n}\n\nexport default grid_graph;"],"mappings":"AAAA,OAAOA,IAAI,MAAM,mBAAmB;AAEpC,SAASC,UAAU,GAAoC;EAAA,IAAnCC,SAAS,uEAAC,IAAI;EAAA,IAAEC,IAAI,uEAAC,YAAY;EACjDC,KAAK,CAAC,aAAa,CAAC;EACpB,IAAIC,KAAK,GAAGC,OAAO,CAAC,mBAAmB,CAAC,CAACN,IAAI,CAAC,GAAG,EAAC,EAAE,CAAC;EACrDI,KAAK,CAAC,SAAS,GAACC,KAAK,CAACE,YAAY,EAAE,CAAC;EACrC,IAAIC,KAAK,GAAG,EAAE;EACdH,KAAK,CAACI,WAAW,CAAC,UAASC,IAAI,EAAE;IAACF,KAAK,CAACG,IAAI,CAAC;MAACC,EAAE,EAACF,IAAI,CAACE,EAAE;MAAEC,KAAK,EAACH,IAAI,CAACE;IAAE,CAAC,CAAC;EAAA,CAAC,CAAC;EAC3E,OAAOP,KAAK;AAChB;AAEA,eAAeJ,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}