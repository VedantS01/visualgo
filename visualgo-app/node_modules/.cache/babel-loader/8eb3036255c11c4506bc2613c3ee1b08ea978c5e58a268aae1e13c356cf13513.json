{"ast":null,"code":"var _jsxFileName = \"/home/vedant/visualgo/visualgo-app/src/App.js\",\n  _s = $RefreshSig$();\nimport Graph from \"react-graph-vis\";\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = {\n  layout: {\n    hierarchical: false\n  },\n  edges: {\n    color: \"#000000\"\n  }\n};\nfunction randomColor() {\n  const red = Math.floor(Math.random() * 256).toString(16).padStart(2, '0');\n  const green = Math.floor(Math.random() * 256).toString(16).padStart(2, '0');\n  const blue = Math.floor(Math.random() * 256).toString(16).padStart(2, '0');\n  return `#${red}${green}${blue}`;\n}\nconst App = () => {\n  _s();\n  const randomGraph = () => {\n    createNode(x_, y_);\n  };\n  const createNode = (x, y) => {\n    const color = randomColor();\n    setState(_ref => {\n      let {\n        graph: {\n          nodes,\n          edges\n        },\n        counter,\n        ...rest\n      } = _ref;\n      const id = counter + 1;\n      const from = Math.floor(Math.random() * (counter - 1)) + 1;\n      return {\n        graph: {\n          nodes: [...nodes, {\n            id,\n            label: `Node ${id}`,\n            color,\n            x,\n            y\n          }],\n          edges: [...edges, {\n            from,\n            to: id\n          }]\n        },\n        counter: id,\n        ...rest\n      };\n    });\n  };\n  const [state, setState] = useState({\n    counter: 5,\n    graph: {\n      nodes: [{\n        id: 1,\n        label: \"Node 1\",\n        color: \"#e04141\"\n      }, {\n        id: 2,\n        label: \"Node 2\",\n        color: \"#e09c41\"\n      }, {\n        id: 3,\n        label: \"Node 3\",\n        color: \"#e0df41\"\n      }, {\n        id: 4,\n        label: \"Node 4\",\n        color: \"#7be041\"\n      }, {\n        id: 5,\n        label: \"Node 5\",\n        color: \"#41e0c9\"\n      }],\n      edges: [{\n        from: 1,\n        to: 2\n      }, {\n        from: 1,\n        to: 3\n      }, {\n        from: 2,\n        to: 4\n      }, {\n        from: 2,\n        to: 5\n      }]\n    },\n    events: {\n      select: _ref2 => {\n        let {\n          nodes,\n          edges\n        } = _ref2;\n        console.log(\"Selected nodes:\");\n        console.log(nodes);\n        console.log(\"Selected edges:\");\n        console.log(edges);\n        // alert(\"Selected node: \" + nodes);\n      }\n      // doubleClick: ({ nodes, edges }) => {\n      //   console.log(\"Deleted nodes:\");\n      //   console.log(nodes);\n      //   console.log(\"Deleted edges:\");\n      //   console.log(edges);\n\n      //   // alert(\"Selected node: \" + nodes);\n      // },\n      // doubleClick: ({ pointer: { canvas } }) => {\n      //   createNode(canvas.x, canvas.y);\n      // }\n    }\n  });\n\n  const {\n    graph,\n    events\n  } = state;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      name: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        label: \"Generate Random Graph\",\n        onClick: graph = randomGraph\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Work area:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Graph, {\n      graph: graph,\n      options: options,\n      events: events,\n      style: {\n        height: \"640px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"2NRCJEbfxZzNnY0Q6dqnPNsrpTc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Graph","React","useState","ReactDOM","options","layout","hierarchical","edges","color","randomColor","red","Math","floor","random","toString","padStart","green","blue","App","randomGraph","createNode","x_","y_","x","y","setState","graph","nodes","counter","rest","id","from","label","to","state","events","select","console","log","height"],"sources":["/home/vedant/visualgo/visualgo-app/src/App.js"],"sourcesContent":["import Graph from \"react-graph-vis\";\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nconst options = {\n  layout: {\n    hierarchical: false\n  },\n  edges: {\n    color: \"#000000\"\n  }\n};\n\nfunction randomColor() {\n  const red = Math.floor(Math.random() * 256).toString(16).padStart(2, '0');\n  const green = Math.floor(Math.random() * 256).toString(16).padStart(2, '0');\n  const blue = Math.floor(Math.random() * 256).toString(16).padStart(2, '0');\n  return `#${red}${green}${blue}`;\n}\n\n\nconst App = () => {\n  const randomGraph = () => {\n    createNode(x_, y_);\n\n  }\n  \n  const createNode = (x, y) => {\n    const color = randomColor();\n    setState(({ graph: { nodes, edges }, counter, ...rest }) => {\n      const id = counter + 1;\n      const from = Math.floor(Math.random() * (counter - 1)) + 1;\n      return {\n        graph: {\n          nodes: [\n            ...nodes,\n            { id, label: `Node ${id}`, color, x, y }\n          ],\n          edges: [\n            ...edges,\n            { from, to: id }\n          ]\n        },\n        counter: id,\n        ...rest\n      }\n    });\n  }\n  const [state, setState] = useState({\n    counter: 5,\n    graph: {\n      nodes: [\n        { id: 1, label: \"Node 1\", color: \"#e04141\" },\n        { id: 2, label: \"Node 2\", color: \"#e09c41\" },\n        { id: 3, label: \"Node 3\", color: \"#e0df41\" },\n        { id: 4, label: \"Node 4\", color: \"#7be041\" },\n        { id: 5, label: \"Node 5\", color: \"#41e0c9\" }\n      ],\n      edges: [\n        { from: 1, to: 2 },\n        { from: 1, to: 3 },\n        { from: 2, to: 4 },\n        { from: 2, to: 5 }\n      ]\n    },\n    events: {\n      select: ({ nodes, edges }) => {\n        console.log(\"Selected nodes:\");\n        console.log(nodes);\n        console.log(\"Selected edges:\");\n        console.log(edges);\n        // alert(\"Selected node: \" + nodes);\n      }\n      // doubleClick: ({ nodes, edges }) => {\n      //   console.log(\"Deleted nodes:\");\n      //   console.log(nodes);\n      //   console.log(\"Deleted edges:\");\n      //   console.log(edges);\n        \n      //   // alert(\"Selected node: \" + nodes);\n      // },\n      // doubleClick: ({ pointer: { canvas } }) => {\n      //   createNode(canvas.x, canvas.y);\n      // }\n    }\n  })\n  const { graph, events } = state;\n  return (\n    <div>\n      <div name='header'>\n        <button label='Generate Random Graph' onClick={graph = randomGraph}/>\n        <p>Work area:</p>\n      </div>\n      <Graph graph={graph} options={options} events={events} style={{ height: \"640px\" }} />\n    </div>\n  );\n\n}\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}