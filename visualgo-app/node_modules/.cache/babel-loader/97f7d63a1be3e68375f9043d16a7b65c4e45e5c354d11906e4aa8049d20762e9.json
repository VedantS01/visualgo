{"ast":null,"code":"function bin_graph() {\n  let num_nodes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1000;\n  // alert('here we go!')\n  const n = Math.log2(num_nodes);\n  let graph = require('ngraph.generators').balancedBinaryTree(n);\n  // alert('nodes: '+graph.getNodeCount())\n  let nodes = [];\n  graph.forEachNode(function (node) {\n    nodes.push({\n      id: node.id,\n      label: node.id\n    });\n  });\n  let edges = [];\n  graph.forEachLink(function (link) {\n    edges.push({\n      from: link.fromId,\n      to: link.toId\n    });\n  });\n  return {\n    nodes: nodes,\n    edges: edges\n  };\n}\nexport default bin_graph;","map":{"version":3,"names":["bin_graph","num_nodes","n","Math","log2","graph","require","balancedBinaryTree","nodes","forEachNode","node","push","id","label","edges","forEachLink","link","from","fromId","to","toId"],"sources":["/home/vedant/visualgo/visualgo-app/src/algorithms/graph_gen/binTree.js"],"sourcesContent":["\n\nfunction bin_graph(num_nodes=1000) {\n    // alert('here we go!')\n    const n = Math.log2(num_nodes)\n    let graph = require('ngraph.generators').balancedBinaryTree(n)\n    // alert('nodes: '+graph.getNodeCount())\n    let nodes = []\n    graph.forEachNode(function(node) {nodes.push({id:node.id, label:node.id})})\n    let edges = []\n    graph.forEachLink(function(link) {edges.push({from:link.fromId, to:link.toId})})\n    return {nodes: nodes, edges: edges}\n}\n\nexport default bin_graph;"],"mappings":"AAEA,SAASA,SAAS,GAAiB;EAAA,IAAhBC,SAAS,uEAAC,IAAI;EAC7B;EACA,MAAMC,CAAC,GAAGC,IAAI,CAACC,IAAI,CAACH,SAAS,CAAC;EAC9B,IAAII,KAAK,GAAGC,OAAO,CAAC,mBAAmB,CAAC,CAACC,kBAAkB,CAACL,CAAC,CAAC;EAC9D;EACA,IAAIM,KAAK,GAAG,EAAE;EACdH,KAAK,CAACI,WAAW,CAAC,UAASC,IAAI,EAAE;IAACF,KAAK,CAACG,IAAI,CAAC;MAACC,EAAE,EAACF,IAAI,CAACE,EAAE;MAAEC,KAAK,EAACH,IAAI,CAACE;IAAE,CAAC,CAAC;EAAA,CAAC,CAAC;EAC3E,IAAIE,KAAK,GAAG,EAAE;EACdT,KAAK,CAACU,WAAW,CAAC,UAASC,IAAI,EAAE;IAACF,KAAK,CAACH,IAAI,CAAC;MAACM,IAAI,EAACD,IAAI,CAACE,MAAM;MAAEC,EAAE,EAACH,IAAI,CAACI;IAAI,CAAC,CAAC;EAAA,CAAC,CAAC;EAChF,OAAO;IAACZ,KAAK,EAAEA,KAAK;IAAEM,KAAK,EAAEA;EAAK,CAAC;AACvC;AAEA,eAAed,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}